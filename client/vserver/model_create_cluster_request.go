/*
 * Api Documentation
 *
 * Api Documentation
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package vserver

// Create K8s Cluster Request
type CreateClusterRequest struct {
	// Auto-healing feature is enable
	AutoHealingEnabled bool `json:"autoHealingEnabled,omitempty"`
	// Auto monitoring feature is enable
	AutoMonitoringEnabled bool `json:"autoMonitoringEnabled,omitempty"`
	// Auto scaling feature is enable
	AutoScalingEnabled bool `json:"autoScalingEnabled,omitempty"`
	// Size of boot volume
	BootVolumeSize int32 `json:"bootVolumeSize"`
	// Id of boot volume type
	BootVolumeTypeId string `json:"bootVolumeTypeId"`
	// Cidr of Calico
	CalicoCidr string `json:"calicoCidr"`
	// Description of the Cluster
	Description string `json:"description,omitempty"`
	// Size of docker volume
	DockerVolumeSize int32 `json:"dockerVolumeSize"`
	// Id of docker volume type
	DockerVolumeTypeId string `json:"dockerVolumeTypeId"`
	// Enable Load Balancer or Not
	EnabledLb bool `json:"enabledLb"`
	// Size of etcd volume
	EtcdVolumeSize int32 `json:"etcdVolumeSize"`
	// Id of etcd volume type
	EtcdVolumeTypeId string `json:"etcdVolumeTypeId"`
	// Ingress Controller feature is enable
	IngressControllerEnabled bool `json:"ingressControllerEnabled,omitempty"`
	// IpIp Mode
	IpipMode string `json:"ipipMode"`
	// Id of K8s Version of the Cluster
	K8sVersion string `json:"k8sVersion"`
	// Number of Master Node
	MasterCount int32 `json:"masterCount"`
	// Id of the flavor of master
	MasterFlavorId string `json:"masterFlavorId"`
	// Id of the image of master
	MasterInstanceTypeId string `json:"masterInstanceTypeId"`
	// Maximum number of node count
	MaxNodeCount int32 `json:"maxNodeCount"`
	// Minimum number of node Count
	MinNodeCount int32 `json:"minNodeCount"`
	// Name of the Cluster
	Name string `json:"name"`
	// Id of the network
	NetworkId string `json:"networkId"`
	// Type of the network
	NetworkType string `json:"networkType"`
	// Number of Minion node
	NodeCount int32 `json:"nodeCount"`
	// Id of the flavor of minion
	NodeFlavorId string `json:"nodeFlavorId"`
	// List of Node Group want to create
	NodeGroupRequestModelList []NodeGroupRequestModel `json:"nodeGroupRequestModelList,omitempty"`
	// Id of the image of minion
	NodeInstanceTypeId string `json:"nodeInstanceTypeId"`
	// List of Id of the secGroup
	SecGroupIds []string `json:"secGroupIds,omitempty"`
	// Id of the sshKey
	SshKeyId string `json:"sshKeyId,omitempty"`
	// Id of the subnet
	SubnetId string `json:"subnetId"`
}
